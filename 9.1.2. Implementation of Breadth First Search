#include <stdio.h>
#include <stdlib.h>
#define MAX 99
// Write your code here...
typedef struct node{
int vertex;
struct node* next;
}Node;
typedef Node* GNODE;
GNODE graph[MAX];
int visited[MAX];

int queue[MAX];
int front = -1, rear = -1;

void enqueue(int value){
	if(rear == MAX -1)
		return;
	if(front == -1)
		front = 0;
	rear++;
	queue[rear] = value;
}
int dequeue(){
	if(front == -1 || front > rear)
		return -1;
	return queue[front++];
}
void BFS(int start){
	int v;
	GNODE temp;
	visited[start] = 1;
	enqueue(start);
	while(front <= rear){
		v = dequeue();
		printf("\n%d",v);
		temp = graph[v];
		while(temp != NULL){
			if(!visited[temp -> vertex]){
				visited[temp -> vertex] = 1;
				enqueue(temp -> vertex);
			}
			temp = temp -> next;
		}
	}
}
void main() {
	int n, E, s, d, i, j, v;
	GNODE p, q;
	printf("Enter no of vertices: ");
	scanf("%d",&n);
	printf("Enter no of edges: ");
	scanf("%d",&E);
	for(i=1;i<=E;i++) {
		printf("Enter source: ");
		scanf("%d",&s);
		printf("Enter destination: ");
		scanf("%d",&d);
		q=(GNODE)malloc(sizeof(struct node));
		q->vertex=d;
		q->next=NULL;
		if(graph[s]==NULL) {
			graph[s]=q;
		} else {
			p=graph[s];
			while(p->next!=NULL)
				p=p->next;
			p->next=q;
		}
	}
	for(i=1;i<=n;i++)
		visited[i]=0;
	printf("Enter Start Vertex for BFS: ");
	scanf("%d", &v);
	printf("BFS of graph: ");
	BFS(v);
	printf("\n");
}
